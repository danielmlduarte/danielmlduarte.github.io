[{"D:\\Dev\\Personal-Projects\\github-page\\src\\index.js":"1","D:\\Dev\\Personal-Projects\\github-page\\src\\App.js":"2","D:\\Dev\\Personal-Projects\\github-page\\src\\reportWebVitals.js":"3","D:\\Dev\\Personal-Projects\\github-page\\src\\components\\list.js":"4","D:\\Dev\\Personal-Projects\\github-page\\src\\redux\\actions\\index.js":"5","D:\\Dev\\Personal-Projects\\github-page\\src\\redux\\store.js":"6","D:\\Dev\\Personal-Projects\\github-page\\src\\pages\\Home.jsx":"7","D:\\Dev\\Personal-Projects\\github-page\\src\\pages\\About.jsx":"8","D:\\Dev\\Personal-Projects\\github-page\\src\\components\\List.js":"9","D:\\Dev\\Personal-Projects\\github-page\\src\\components\\NavBar.js":"10","D:\\Dev\\Personal-Projects\\github-page\\src\\components\\Navbar.js":"11","D:\\Dev\\Personal-Projects\\github-page\\src\\services\\GitApi.js":"12","D:\\Dev\\Personal-Projects\\github-page\\src\\pages\\Projects.jsx":"13","D:\\Dev\\Personal-Projects\\github-page\\src\\components\\ProjectCard.js":"14","D:\\Dev\\Personal-Projects\\github-page\\src\\pages\\Contact.jsx":"15","D:\\Dev\\Personal-Projects\\github-page\\src\\components\\Form.js":"16","D:\\Dev\\Personal-Projects\\github-page\\src\\redux\\reducers\\projectsReducer.js":"17","D:\\Dev\\Personal-Projects\\github-page\\src\\pages\\ProjectDetails.jsx":"18","D:\\Dev\\web-repository\\danielmlduarte.github.io\\src\\index.js":"19","D:\\Dev\\web-repository\\danielmlduarte.github.io\\src\\reportWebVitals.js":"20","D:\\Dev\\web-repository\\danielmlduarte.github.io\\src\\App.js":"21","D:\\Dev\\web-repository\\danielmlduarte.github.io\\src\\redux\\store.js":"22","D:\\Dev\\web-repository\\danielmlduarte.github.io\\src\\components\\Navbar.js":"23","D:\\Dev\\web-repository\\danielmlduarte.github.io\\src\\redux\\reducers\\projectsReducer.js":"24","D:\\Dev\\web-repository\\danielmlduarte.github.io\\src\\services\\GitApi.js":"25","D:\\Dev\\web-repository\\danielmlduarte.github.io\\src\\pages\\Contact.jsx":"26","D:\\Dev\\web-repository\\danielmlduarte.github.io\\src\\pages\\Projects.jsx":"27","D:\\Dev\\web-repository\\danielmlduarte.github.io\\src\\pages\\ProjectDetails.jsx":"28","D:\\Dev\\web-repository\\danielmlduarte.github.io\\src\\pages\\Home.jsx":"29","D:\\Dev\\web-repository\\danielmlduarte.github.io\\src\\pages\\About.jsx":"30","D:\\Dev\\web-repository\\danielmlduarte.github.io\\src\\components\\Form.js":"31","D:\\Dev\\web-repository\\danielmlduarte.github.io\\src\\components\\ProjectCard.js":"32","D:\\Dev\\web-repository\\danielmlduarte.github.io\\src\\redux\\actions\\index.js":"33","D:\\Dev\\web-repository\\danielmlduarte.github.io\\src\\components\\Footer.js":"34"},{"size":622,"mtime":1607526694566,"results":"35","hashOfConfig":"36"},{"size":1322,"mtime":1608078598899,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":499162500000,"results":"38","hashOfConfig":"36"},{"size":419,"mtime":1607460797425,"results":"39","hashOfConfig":"36"},{"size":392,"mtime":1608129257345,"results":"40","hashOfConfig":"36"},{"size":409,"mtime":1608055588667,"results":"41","hashOfConfig":"36"},{"size":892,"mtime":1607878655436,"results":"42","hashOfConfig":"36"},{"size":2755,"mtime":1608066788397,"results":"43","hashOfConfig":"36"},{"size":419,"mtime":1607460797425,"results":"44","hashOfConfig":"36"},{"size":938,"mtime":1607477802738,"results":"45","hashOfConfig":"36"},{"size":873,"mtime":1608065693808,"results":"46","hashOfConfig":"36"},{"size":2210,"mtime":1608075156108,"results":"47","hashOfConfig":"36"},{"size":624,"mtime":1608056803007,"results":"48","hashOfConfig":"36"},{"size":1422,"mtime":1608144984971,"results":"49","hashOfConfig":"36"},{"size":239,"mtime":1607558588174,"results":"50","hashOfConfig":"36"},{"size":2513,"mtime":1607565771041,"results":"51","hashOfConfig":"36"},{"size":582,"mtime":1608074934842,"results":"52","hashOfConfig":"36"},{"size":437,"mtime":1608057359260,"results":"53","hashOfConfig":"36"},{"size":388,"mtime":1613047416314,"results":"54","hashOfConfig":"55"},{"size":364,"mtime":1613001764024,"results":"56","hashOfConfig":"55"},{"size":1491,"mtime":1613047416272,"results":"57","hashOfConfig":"55"},{"size":399,"mtime":1613047416319,"results":"58","hashOfConfig":"55"},{"size":678,"mtime":1613047416312,"results":"59","hashOfConfig":"55"},{"size":533,"mtime":1613047416318,"results":"60","hashOfConfig":"55"},{"size":2378,"mtime":1613047416354,"results":"61","hashOfConfig":"55"},{"size":1730,"mtime":1613050598392,"results":"62","hashOfConfig":"55"},{"size":1326,"mtime":1613047416317,"results":"63","hashOfConfig":"55"},{"size":410,"mtime":1613047416317,"results":"64","hashOfConfig":"55"},{"size":1796,"mtime":1613052371434,"results":"65","hashOfConfig":"55"},{"size":2837,"mtime":1613050833481,"results":"66","hashOfConfig":"55"},{"size":2513,"mtime":1607565771041,"results":"67","hashOfConfig":"68"},{"size":2382,"mtime":1613047416313,"results":"69","hashOfConfig":"55"},{"size":375,"mtime":1613047385540,"results":"70","hashOfConfig":"55"},{"size":340,"mtime":1613047416312,"results":"71","hashOfConfig":"55"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"fhs13g",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},"18ocvry",{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"119"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"j7041b",{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"119"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},"D:\\Dev\\Personal-Projects\\github-page\\src\\index.js",[],["153","154"],"D:\\Dev\\Personal-Projects\\github-page\\src\\App.js",[],"D:\\Dev\\Personal-Projects\\github-page\\src\\reportWebVitals.js",[],"D:\\Dev\\Personal-Projects\\github-page\\src\\components\\list.js",[],"D:\\Dev\\Personal-Projects\\github-page\\src\\redux\\actions\\index.js",[],["155","156"],"D:\\Dev\\Personal-Projects\\github-page\\src\\redux\\store.js",[],"D:\\Dev\\Personal-Projects\\github-page\\src\\pages\\Home.jsx",["157"],"import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport '../styles/Home.css'\r\nimport ProfileImage from '../Images/FotoParqueSemBG.png';\r\n\r\nexport const Home = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"home-main\">\r\n        <img className=\"home-image\" src={ProfileImage} alt=\"\"/>\r\n        <p className=\"home-speak-text\">Olá! Sou o Daniel Duarte, Desenvolvedor Front-End e estudante de desenvolvimento Full Stack!!!</p>\r\n        <p className=\"home-text\">Sabia quem sou eu, conheça meus projetos, com quais stacks eu trabalho,  veja um pouco do meu {\"<code>\"} e muito mais!</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nHome.propTypes = {\r\n  prop: PropTypes\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  \r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\r\n","D:\\Dev\\Personal-Projects\\github-page\\src\\pages\\About.jsx",[],"D:\\Dev\\Personal-Projects\\github-page\\src\\components\\List.js",[],["158","159"],"D:\\Dev\\Personal-Projects\\github-page\\src\\components\\NavBar.js",[],"D:\\Dev\\Personal-Projects\\github-page\\src\\components\\Navbar.js",["160"],"import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/Navbar.css'\r\n\r\nexport default function NavBar() {\r\n  return (\r\n    <div className=\"navbar-content\">\r\n      <Link className=\"navbar-header\" to=\"/\">\r\n        <img className=\"navbar-image\" src=\"https://avatars2.githubusercontent.com/u/69773207?s=460&u=3c1497fe8cc953d0419c15955dcaf4b683fc4d70&v=4\" alt=\"Daniel Profile Photo\" />\r\n        <p className=\"navbar-title\">Daniel Duarte - Desenvolvedor Front-End Jr.</p>\r\n      </Link>\r\n      <div className=\"navbar-links\">\r\n        <Link className=\"navbar-link\" to=\"/\">HOME</Link>\r\n        <Link className=\"navbar-link\" to=\"/about\">SOBRE MIM</Link>\r\n        <Link className=\"navbar-link\" to=\"/projects\">PROJETOS</Link>\r\n        <Link className=\"navbar-link-button\" to=\"/contact\">ENTRE EM CONTATO COMIGO</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Dev\\Personal-Projects\\github-page\\src\\services\\GitApi.js",["161"],"import { listProjects, requestProjects, failedRequest } from '../redux/actions'\r\n\r\nexport const fetchGitHubProjectsList = (ownerInfos) => {\r\n  const { owner, repoName, optionalPath } = ownerInfos;\r\n  const endpoint = `https://api.github.com/repos/${owner}/${repoName}/contents/`;\r\n  return async (dispatch) => {\r\n    dispatch(requestProjects());\r\n    try {\r\n      const response = await fetch(endpoint);\r\n      const object = await response.json();\r\n      const projects = handleProjectsList(object)    \r\n      dispatch(listProjects(projects));\r\n    } catch (error) {\r\n      dispatch(failedRequest(error));\r\n    }\r\n  }\r\n};\r\n\r\nconst handleProjectsList = (object) => {\r\n  const projectList = object.filter(project => project.type === 'dir')\r\n    .map((project) => ({\r\n        name: project.name,\r\n        files: project.url,\r\n        url: project.html_url,\r\n        git: project.git_url,\r\n    }));\r\n  return projectList;\r\n};\r\n\r\nconst getProjectGitHubPage = (object, projectName) => {\r\n  const haveHTML = (object.tree.some(file => file.path === 'index.html'));\r\n  let gitHubProjectPageUrl = '';\r\n  if (haveHTML) {\r\n    gitHubProjectPageUrl = `https://danielmlduarte.github.io/trybe-projects/${projectName}`\r\n  }\r\n  return gitHubProjectPageUrl;\r\n};\r\n\r\nexport const fetchGitHubProjectInfos = async (project) => {\r\n  const { name, git } = project;\r\n  const endpoint = git;\r\n  try {\r\n    const response = await fetch(endpoint);\r\n    const object = await response.json();\r\n    const gitPageUrl = getProjectGitHubPage(object, name);\r\n    return gitPageUrl;\r\n    \r\n  } catch (error) {\r\n    alert(error);\r\n  }\r\n};\r\n\r\nconst getProjectGitHubImage = (object) => {\r\n  console.log(object);\r\n  const ImagemObject = (object.find(file => file.name === 'banner.jpg'));\r\n  let gitHubProjectImage = '';\r\n  if (ImagemObject) {\r\n    gitHubProjectImage = ImagemObject.download_url;\r\n  }\r\n  return gitHubProjectImage;\r\n};\r\n\r\nexport const fetchGitHubProjectImage = async (endpoint) => {\r\n  try {\r\n    const response = await fetch(endpoint);\r\n    const object = await response.json();\r\n    const gitImageProject = getProjectGitHubImage(object);\r\n    console.log(gitImageProject);\r\n    return gitImageProject;\r\n  } catch (error) {\r\n  }\r\n};","D:\\Dev\\Personal-Projects\\github-page\\src\\pages\\Projects.jsx",[],"D:\\Dev\\Personal-Projects\\github-page\\src\\components\\ProjectCard.js",["162","163","164"],"import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { fetchGitHubProjectInfos, fetchGitHubProjectImage } from '../services/GitApi';\r\nimport { Link } from 'react-router-dom';\r\nimport gitHubIcon from '../Images/github-brands.svg';\r\n\r\nclass ProjectCard extends Component {\r\n  constructor() {\r\n    super()\r\n  \r\n    this.state = {\r\n       imageUrl: '',\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { project: { files } } = this.props;\r\n    const imageUrl = await fetchGitHubProjectImage(files);\r\n    this.setState({\r\n      imageUrl,\r\n    });\r\n  }\r\n  \r\n  render() {\r\n    const { project: { url } } = this.props;\r\n    let { project: { name } } = this.props;\r\n    name = name.replaceAll('-', ' ');\r\n    name = name.toUpperCase();\r\n    const { imageUrl } = this.state;\r\n    return (\r\n      <div className=\"project-card\">\r\n        <div className=\"project-image\">\r\n          <img src={imageUrl} alt=\"\"/>\r\n        </div>\r\n        <div className=\"project-info\">\r\n          <h3>\r\n            {name}\r\n          </h3>\r\n          <Link to={`/projects/${name}`}>Detalhes</Link>\r\n          <a className=\"project-button\" target=\"_blank\" href={url}>\r\n            <img src={gitHubIcon} alt=\"\"/>\r\n            Visite o repositório\r\n          </a>\r\n          {/* <a target=\"_blank\" href={exeUrl}>Execute o projeto</a> */}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProjectCard\r\n\r\n\r\n","D:\\Dev\\Personal-Projects\\github-page\\src\\pages\\Contact.jsx",[],"D:\\Dev\\Personal-Projects\\github-page\\src\\components\\Form.js",[],"D:\\Dev\\Personal-Projects\\github-page\\src\\redux\\reducers\\projectsReducer.js",["165","166"],"import { LIST_PROJECTS, REQUEST_FAILED, REQUEST_PROJECTS, GET_IMAGE, REQUEST_IMAGE } from '../actions';\r\n\r\nconst INITIAL_STATE = {\r\n  isFetching: false,\r\n  list: '',\r\n  error: '',\r\n};\r\n\r\nfunction projectsReducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case LIST_PROJECTS:\r\n      return {...state, list: action.list, isFetching: false};\r\n    case REQUEST_FAILED:\r\n      return {...state, error: action.error};\r\n    case REQUEST_PROJECTS:\r\n      return {...state, isFetching: true};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default projectsReducer;","D:\\Dev\\Personal-Projects\\github-page\\src\\pages\\ProjectDetails.jsx",["167"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nexport const ProjectDetails = (props) => {\r\n  const { match: { params: { name } } } = props;\r\n  return (\r\n    <div>\r\n      {`Página de detalhes do projeto ${name}`}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  \r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectDetails)\r\n","D:\\Dev\\web-repository\\danielmlduarte.github.io\\src\\index.js",[],["168","169","170","171","172","173"],"D:\\Dev\\web-repository\\danielmlduarte.github.io\\src\\reportWebVitals.js",[],["174","175","176","177","178","179"],"D:\\Dev\\web-repository\\danielmlduarte.github.io\\src\\App.js",[],"D:\\Dev\\web-repository\\danielmlduarte.github.io\\src\\redux\\store.js",[],"D:\\Dev\\web-repository\\danielmlduarte.github.io\\src\\components\\Navbar.js",[],"D:\\Dev\\web-repository\\danielmlduarte.github.io\\src\\redux\\reducers\\projectsReducer.js",[],"D:\\Dev\\web-repository\\danielmlduarte.github.io\\src\\services\\GitApi.js",["180"],"import { listProjects, requestProjects, failedRequest } from '../redux/actions';\n\nconst handleProjectsList = (object) => {\n  const projectList = object.filter((project) => project.type === 'dir')\n    .map((project) => ({\n      name: project.name,\n      files: project.url,\n      url: project.html_url,\n      git: project.git_url,\n    }));\n  return projectList;\n};\n\nexport const fetchGitHubProjectsList = (ownerInfos) => {\n  const { owner, repoName } = ownerInfos;\n  const endpoint = `https://api.github.com/repos/${owner}/${repoName}/contents/`;\n  return async (dispatch) => {\n    dispatch(requestProjects());\n    try {\n      const response = await fetch(endpoint);\n      const object = await response.json();\n      const projects = handleProjectsList(object);\n      dispatch(listProjects(projects));\n    } catch (error) {\n      dispatch(failedRequest(error));\n    }\n  };\n};\n\nconst getProjectGitHubPage = (object, projectName) => {\n  const haveHTML = (object.tree.some((file) => file.path === 'index.html'));\n  let gitHubProjectPageUrl = '';\n  if (haveHTML) {\n    gitHubProjectPageUrl = `https://danielmlduarte.github.io/trybe-projects/${projectName}`;\n  }\n  return gitHubProjectPageUrl;\n};\n\nexport const fetchGitHubProjectInfos = async (project) => {\n  const { name, git } = project;\n  const endpoint = git;\n  try {\n    const response = await fetch(endpoint);\n    const object = await response.json();\n    const gitPageUrl = getProjectGitHubPage(object, name);\n    return gitPageUrl;\n  } catch (error) {\n    alert(error);\n  }\n};\n\nconst fetchGitHubProjectDescription = async (url) => {\n  try {\n    const response = await fetch(url);\n    const blob = await response.blob();\n    return blob;\n  } catch (error) {\n    return error;\n  }\n};\n\nconst getProjectGitHubImage = (object) => {\n  console.log(object);\n  const ImagemObject = (object.find((file) => file.name === 'description.txt'));\n  let gitHubProjectImage = '';\n  if (ImagemObject) {\n    gitHubProjectImage = fetchGitHubProjectDescription(ImagemObject.download_url);\n  }\n  return gitHubProjectImage;\n};\n\nexport const fetchGitHubProjectImage = async (endpoint) => {\n  try {\n    const response = await fetch(endpoint);\n    const object = await response.json();\n    const gitImageProject = getProjectGitHubImage(object);\n    console.log(gitImageProject);\n    return gitImageProject;\n  } catch (error) {\n    return error;\n  }\n};\n","D:\\Dev\\web-repository\\danielmlduarte.github.io\\src\\pages\\Contact.jsx",[],"D:\\Dev\\web-repository\\danielmlduarte.github.io\\src\\pages\\Projects.jsx",[],"D:\\Dev\\web-repository\\danielmlduarte.github.io\\src\\pages\\ProjectDetails.jsx",[],"D:\\Dev\\web-repository\\danielmlduarte.github.io\\src\\pages\\Home.jsx",[],"D:\\Dev\\web-repository\\danielmlduarte.github.io\\src\\pages\\About.jsx",[],"D:\\Dev\\web-repository\\danielmlduarte.github.io\\src\\components\\Form.js",[],"D:\\Dev\\web-repository\\danielmlduarte.github.io\\src\\components\\ProjectCard.js",["181"],"import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchGitHubProjectImage } from '../services/GitApi';\nimport gitHubIcon from '../Images/github-brands.svg';\nimport bgProject from '../Images/bg-project.jpg';\n\nfunction ProjectCard({ project }) {\n  const [stacks, setStacks] = useState('');\n  const [time, setTime] = useState('');\n  const [shortDescription, setShortDescription] = useState('');\n\n  const reader = (file) => {\n    console.log(file);\n    return new Promise((resolve) => {\n      const fileReader = new FileReader();\n      fileReader.onload = () => resolve(fileReader.result);\n      fileReader.readAsText(file);\n    });\n  };\n\n  const readFile = async (file) => {\n    try {\n      const result = await reader(file);\n      return result;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  const fetchProjectInfos = async () => {\n    const { files } = project;\n    const imageUrl = await fetchGitHubProjectImage(files);\n    if (imageUrl !== '') {\n      let descriptions = await readFile(imageUrl);\n      descriptions = descriptions.split('\\n');\n      console.log(descriptions);\n      setStacks(descriptions[0]);\n      setTime(descriptions[1]);\n      setShortDescription(descriptions[2]);\n    }\n  };\n\n  useEffect(() => {\n    fetchProjectInfos();\n  }, []);\n\n  const { url, name } = project;\n  const nameReplaced = name.replaceAll('-', ' ').toUpperCase();\n  return (\n    <div className=\"project-card\">\n      <div className=\"project-image\">\n        <img src={ bgProject } alt=\"\" />\n      </div>\n      <div className=\"project-info\">\n        <h3>\n          { nameReplaced }\n        </h3>\n        <p>{ `${shortDescription}` }</p>\n        <p>{ `Neste projeto usei ${stacks}` }</p>\n        <p>{ `Prazo de ${time}` }</p>\n        {/* <Link to={`/projects/${name}`}>Detalhes</Link> */}\n        <a className=\"project-button\" target=\"_blank\" rel=\"noreferrer\" href={ url }>\n          <img src={ gitHubIcon } alt=\"\" />\n          Visite o repositório\n        </a>\n        {/* <a target=\"_blank\" href={exeUrl}>Execute o projeto</a> */}\n      </div>\n    </div>\n  );\n}\n\nProjectCard.propTypes = {\n  project: PropTypes.shape({\n    url: PropTypes.string.isRequired,\n    files: PropTypes.string.isRequired,\n    name: PropTypes.shape({\n      replaceAll: PropTypes.func.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default ProjectCard;\n","D:\\Dev\\web-repository\\danielmlduarte.github.io\\src\\redux\\actions\\index.js",[],"D:\\Dev\\web-repository\\danielmlduarte.github.io\\src\\components\\Footer.js",[],{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"182","replacedBy":"186"},{"ruleId":"184","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":1,"column":17,"nodeType":"190","messageId":"191","endLine":1,"endColumn":26},{"ruleId":"182","replacedBy":"192"},{"ruleId":"184","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":9,"column":9,"nodeType":"196","endLine":9,"endColumn":177},{"ruleId":"188","severity":1,"message":"197","line":4,"column":28,"nodeType":"190","messageId":"191","endLine":4,"endColumn":40},{"ruleId":"188","severity":1,"message":"198","line":2,"column":8,"nodeType":"190","messageId":"191","endLine":2,"endColumn":17},{"ruleId":"188","severity":1,"message":"199","line":3,"column":10,"nodeType":"190","messageId":"191","endLine":3,"endColumn":33},{"ruleId":"200","severity":1,"message":"201","line":40,"column":41,"nodeType":"202","endLine":40,"endColumn":56},{"ruleId":"188","severity":1,"message":"203","line":1,"column":59,"nodeType":"190","messageId":"191","endLine":1,"endColumn":68},{"ruleId":"188","severity":1,"message":"204","line":1,"column":70,"nodeType":"190","messageId":"191","endLine":1,"endColumn":83},{"ruleId":"188","severity":1,"message":"189","line":1,"column":17,"nodeType":"190","messageId":"191","endLine":1,"endColumn":26},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"205","replacedBy":"217"},{"ruleId":"207","replacedBy":"218"},{"ruleId":"209","replacedBy":"219"},{"ruleId":"211","replacedBy":"220"},{"ruleId":"213","replacedBy":"221"},{"ruleId":"215","replacedBy":"222"},{"ruleId":"223","severity":1,"message":"224","line":48,"column":5,"nodeType":"225","messageId":"226","endLine":48,"endColumn":17},{"ruleId":"227","severity":1,"message":"228","line":45,"column":6,"nodeType":"229","endLine":45,"endColumn":8,"suggestions":"230"},"no-native-reassign",["231"],"no-negated-in-lhs",["232"],["231"],["232"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar",["231"],["232"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'optionalPath' is assigned a value but never used.","'PropTypes' is defined but never used.","'fetchGitHubProjectInfos' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'GET_IMAGE' is defined but never used.","'REQUEST_IMAGE' is defined but never used.","lines-around-directive",["233"],"no-spaced-func",["234"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["233"],["234"],[],[],[],[],"no-alert","Unexpected alert.","CallExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchProjectInfos'. Either include it or remove the dependency array.","ArrayExpression",["235"],"no-global-assign","no-unsafe-negation","padding-line-between-statements","func-call-spacing",{"desc":"236","fix":"237"},"Update the dependencies array to be: [fetchProjectInfos]",{"range":"238","text":"239"},[1307,1309],"[fetchProjectInfos]"]