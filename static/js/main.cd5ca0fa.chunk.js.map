{"version":3,"sources":["Images/frontend.png","pages/Home.jsx","Images/SlackLine.png","Images/FotoPraiaCostas.jpg","Images/FotoMuseuVideoGame1.jpg","Images/FotoMuseuVideoGame2.jpg","Images/htmlcssjs-nobg.png","Images/reactredux-nobg.png","Images/githubvscode-nobg.png","pages/About.jsx","redux/actions/index.js","services/GitApi.js","Images/github-brands.svg","Images/bg-project.jpg","components/ProjectCard.js","components/MainProjectCard.js","data/projectsList.js","pages/Projects.jsx","components/Navbar.js","components/Footer.js","Images/GitHub-contact.png","Images/Linkedin-contact.png","Images/Outlook-contact.png","Images/Whatsapp-contact.png","pages/Contact.jsx","pages/ProjectDetails.jsx","App.js","redux/reducers/projectsReducer.js","redux/store.js","index.js"],"names":["Home","downloadCurriculum","a","fetch","response","blob","file","url","window","URL","createObjectURL","selector","document","createElement","href","download","click","className","src","frontEndImage","alt","type","onClick","About","htmlCssJsImage","reactReduxImage","githubVsCodeImage","photoSlack","photoGameMuseumOne","photoBeach","photoGameMuseumTwo","Carousel","Item","REQUEST_PROJECTS","REQUEST_FAILED","LIST_PROJECTS","handleProjectsList","object","filter","project","map","name","files","html_url","git","git_url","fetchGitHubProjectDescription","getProjectGitHubImage","ImagemObject","find","gitHubProjectImage","download_url","fetchGitHubProjectImage","endpoint","json","gitImageProject","ProjectCard","useState","stacks","setStacks","time","setTime","shortDescription","setShortDescription","reader","Promise","resolve","fileReader","FileReader","onload","result","readAsText","readFile","fetchProjectInfos","imageUrl","descriptions","split","useEffect","nameReplaced","replaceAll","toUpperCase","bgProject","target","rel","gitHubIcon","MainProjectCard","description","run","appOnAir","stack","mainProjects","team","connect","state","projectsList","projectsReducer","list","isRedirect","setIsRedirect","to","index","length","NavBar","Footer","Contact","outlook","linkedin","github","whatsapp","ProjectDetails","match","params","dispatch","fetchProjects","ownerInfos","owner","repoName","projects","error","fetchGitHubProjectsList","optionalPath","exact","path","component","Projects","INITIAL_STATE","isFetching","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","basename","process","getElementById"],"mappings":"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","file":"static/js/main.cd5ca0fa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/frontend.6f68868a.png\";","import React from 'react';\nimport '../styles/Home.css';\nimport frontEndImage from '../Images/frontend.png';\n\nfunction Home() {\n  const downloadCurriculum = async () => {\n    try {\n      const response = await fetch('https://raw.githubusercontent.com/danielmlduarte/danielmlduarte/master/Daniel%20M%C3%BAcio%20Lima%20Duarte.pdf');\n      const file = await response.blob();\n      const url = window.URL.createObjectURL(file);\n      const selector = document.createElement('a');\n      selector.href = url;\n      selector.download = 'Daniel Múcio Lima Duarte.pdf';\n      selector.click();\n    } catch (error) {\n      return error;\n    }\n  };\n\n  return (\n    <div className=\"home-main\">\n      {/* <p className=\"home-speak-text\">Olá! Sou o Daniel Duarte,\n      Desenvolvedor Front-End e estudante de desenvolvimento Full Stack!!!</p> */}\n      <img className=\"home-image\" src={ frontEndImage } alt=\"\" />\n      <div className=\"home-main-content\">\n        <img\n          className=\"home-avatar\"\n          src=\"https://avatars2.githubusercontent.com/u/69773207?s=460&u=3c1497fe8cc953d0419c15955dcaf4b683fc4d70&v=4\"\n          alt=\"Daniel Profile\"\n        />\n        <div className=\"home-text-content\">\n          <p\n            className=\"home-text\"\n          >\n            Nesse site, você irá encontrar os meus projetos\n            desenvolvidos durante minha formação na Trybe e\n            com quais stacks eu trabalho atualmente.\n          </p>\n          <button\n            className=\"home-button\"\n            type=\"button\"\n            onClick={ downloadCurriculum }\n          >\n            Faça o download do meu currículo\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/SlackLine.f3f1e1b7.png\";","export default __webpack_public_path__ + \"static/media/FotoPraiaCostas.61e5c69b.jpg\";","export default __webpack_public_path__ + \"static/media/FotoMuseuVideoGame1.c98fdb0b.jpg\";","export default __webpack_public_path__ + \"static/media/FotoMuseuVideoGame2.02fdcea0.jpg\";","export default __webpack_public_path__ + \"static/media/htmlcssjs-nobg.419b59df.png\";","export default __webpack_public_path__ + \"static/media/reactredux-nobg.38d5f2c8.png\";","export default __webpack_public_path__ + \"static/media/githubvscode-nobg.a6a432b9.png\";","import React from 'react';\nimport { Carousel } from 'react-bootstrap';\nimport '../styles/About.css';\nimport photoSlack from '../Images/SlackLine.png';\nimport photoBeach from '../Images/FotoPraiaCostas.jpg';\nimport photoGameMuseumOne from '../Images/FotoMuseuVideoGame1.jpg';\nimport photoGameMuseumTwo from '../Images/FotoMuseuVideoGame2.jpg';\nimport htmlCssJsImage from '../Images/htmlcssjs-nobg.png';\nimport reactReduxImage from '../Images/reactredux-nobg.png';\nimport githubVsCodeImage from '../Images/githubvscode-nobg.png';\n\nfunction About() {\n  return (\n    <div>\n      <div className=\"about-container\">\n        <div className=\"about-container-text\">\n          <h3>Sobre mim.</h3>\n          <h5>\n            Eu sou o Daniel, um desenvolvedor front-end e estudante\n            de desenvolvimento web full stack de BH, Minas Gerais.\n          </h5>\n          <p>\n            Gosto de transformar problemas complexos em códigos simples,\n            bonitos e intuitivos.\n            Quando não estou codando, você me verá cozinhando,\n            passeando na natureza ou praticando esportes ao ar livre.\n          </p>\n          <p>\n            Desde de pequeno, sempre muito curioso, me apaixonei por\n            tecnologia e pela computação, que pra mim,\n            não é só um trabalho, mas um estilo de vida.\n          </p>\n          <div className=\"about-container-stacks\">\n            <img src={ htmlCssJsImage } alt=\"\" />\n            <img src={ reactReduxImage } alt=\"\" />\n            <img src={ githubVsCodeImage } alt=\"\" />\n          </div>\n        </div>\n      </div>\n      <div className=\"about-photo-container\">\n        <img className=\"about-photo\" src={ photoSlack } alt=\"\" />\n        <img className=\"about-photo\" src={ photoGameMuseumOne } alt=\"\" />\n        <img className=\"about-photo\" src={ photoBeach } alt=\"\" />\n        <img className=\"about-photo\" src={ photoGameMuseumTwo } alt=\"\" />\n      </div>\n      <div className=\"carousel-photo\">\n        <Carousel>\n          <Carousel.Item>\n            <img\n              className=\"d-block w-100\"\n              src={ photoSlack }\n              alt=\"First slide\"\n            />\n          </Carousel.Item>\n          <Carousel.Item>\n            <img\n              className=\"d-block w-100\"\n              src={ photoGameMuseumOne }\n              alt=\"Second slide\"\n            />\n          </Carousel.Item>\n          <Carousel.Item>\n            <img\n              className=\"d-block w-100\"\n              src={ photoBeach }\n              alt=\"Third slide\"\n            />\n          </Carousel.Item>\n          <Carousel.Item>\n            <img\n              className=\"d-block w-100\"\n              src={ photoGameMuseumTwo }\n              alt=\"Four slide\"\n            />\n          </Carousel.Item>\n        </Carousel>\n      </div>\n    </div>\n  );\n}\n\nexport default About;\n","export const REQUEST_PROJECTS = 'REQUEST_PROJECTS';\nexport const REQUEST_FAILED = 'REQUEST_FAILED';\nexport const LIST_PROJECTS = 'LIST_PROJECTS';\n\nexport const requestProjects = () => ({\n  type: REQUEST_PROJECTS,\n});\n\nexport const failedRequest = (error) => ({\n  type: REQUEST_FAILED,\n  error,\n});\n\nexport const listProjects = (list) => ({\n  type: LIST_PROJECTS,\n  list,\n});\n","import { listProjects, requestProjects, failedRequest } from '../redux/actions';\n\nconst handleProjectsList = (object) => {\n  const projectList = object.filter((project) => project.type === 'dir')\n    .map((project) => ({\n      name: project.name,\n      files: project.url,\n      url: project.html_url,\n      git: project.git_url,\n    }));\n  return projectList;\n};\n\nexport const fetchGitHubProjectsList = (ownerInfos) => {\n  const { owner, repoName } = ownerInfos;\n  const endpoint = `https://api.github.com/repos/${owner}/${repoName}/contents/`;\n  return async (dispatch) => {\n    dispatch(requestProjects());\n    try {\n      const response = await fetch(endpoint);\n      const object = await response.json();\n      const projects = handleProjectsList(object);\n      dispatch(listProjects(projects));\n    } catch (error) {\n      dispatch(failedRequest(error));\n    }\n  };\n};\n\nconst getProjectGitHubPage = (object, projectName) => {\n  const haveHTML = (object.tree.some((file) => file.path === 'index.html'));\n  let gitHubProjectPageUrl = '';\n  if (haveHTML) {\n    gitHubProjectPageUrl = `https://danielmlduarte.github.io/trybe-projects/${projectName}`;\n  }\n  return gitHubProjectPageUrl;\n};\n\nexport const fetchGitHubProjectInfos = async (project) => {\n  const { name, git } = project;\n  const endpoint = git;\n  try {\n    const response = await fetch(endpoint);\n    const object = await response.json();\n    const gitPageUrl = getProjectGitHubPage(object, name);\n    return gitPageUrl;\n  } catch (error) {\n    return error;\n  }\n};\n\nconst fetchGitHubProjectDescription = async (url) => {\n  try {\n    const response = await fetch(url);\n    const blob = await response.blob();\n    return blob;\n  } catch (error) {\n    return error;\n  }\n};\n\nconst getProjectGitHubImage = (object) => {\n  const ImagemObject = (object.find((file) => file.name === 'description.txt'));\n  let gitHubProjectImage = '';\n  if (ImagemObject) {\n    gitHubProjectImage = fetchGitHubProjectDescription(ImagemObject.download_url);\n  }\n  return gitHubProjectImage;\n};\n\nexport const fetchGitHubProjectImage = async (endpoint) => {\n  try {\n    const response = await fetch(endpoint);\n    const object = await response.json();\n    const gitImageProject = getProjectGitHubImage(object);\n    return gitImageProject;\n  } catch (error) {\n    return error;\n  }\n};\n","export default __webpack_public_path__ + \"static/media/github-brands.e2f07326.svg\";","export default __webpack_public_path__ + \"static/media/bg-project.9f8a153a.jpg\";","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchGitHubProjectImage } from '../services/GitApi';\nimport gitHubIcon from '../Images/github-brands.svg';\nimport bgProject from '../Images/bg-project.jpg';\n\nfunction ProjectCard({ project }) {\n  const [stacks, setStacks] = useState('');\n  const [time, setTime] = useState('');\n  const [shortDescription, setShortDescription] = useState('');\n\n  const reader = (file) => {\n    if (file) {\n      return new Promise((resolve) => {\n        const fileReader = new FileReader();\n        fileReader.onload = () => resolve(fileReader.result);\n        fileReader.readAsText(file);\n      });\n    }\n  };\n\n  const readFile = async (file) => {\n    try {\n      const result = await reader(file);\n      return result;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  const fetchProjectInfos = async () => {\n    const { files } = project;\n    const imageUrl = await fetchGitHubProjectImage(files);\n    if (imageUrl !== '') {\n      let descriptions = await readFile(imageUrl);\n      descriptions = descriptions.split('\\n');\n      setStacks(descriptions[0]);\n      setTime(descriptions[1]);\n      setShortDescription(descriptions[2]);\n    }\n  };\n\n  useEffect(() => {\n    fetchProjectInfos();\n  });\n\n  const { url, name } = project;\n  const nameReplaced = name.replaceAll('-', ' ').toUpperCase();\n  return (\n    <div className=\"project-card\">\n      <div className=\"project-image\">\n        <img src={ bgProject } alt=\"\" />\n      </div>\n      <div className=\"project-info\">\n        <h3>\n          { nameReplaced }\n        </h3>\n        <p>{ `${shortDescription}` }</p>\n        <p>{ stacks }</p>\n        <p>{ time }</p>\n        {/* <Link to={`/projects/${name}`}>Detalhes</Link> */}\n        <a className=\"project-button\" target=\"_blank\" rel=\"noreferrer\" href={ url }>\n          <img src={ gitHubIcon } alt=\"\" />\n          Visite o repositório\n        </a>\n        {/* <a target=\"_blank\" href={exeUrl}>Execute o projeto</a> */}\n      </div>\n    </div>\n  );\n}\n\nProjectCard.propTypes = {\n  project: PropTypes.shape({\n    url: PropTypes.string.isRequired,\n    files: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ProjectCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport gitHubIcon from '../Images/github-brands.svg';\n\nfunction MainProjectCard({ project: { name, description, stacks, git, run, appOnAir } }) {\n  return (\n    <div className=\"main-project-card\">\n      <div className=\"main-project-info\">\n        <h3>\n          { name }\n        </h3>\n        <p>{ `${description}` }</p>\n        <div className=\"main-project-stacks-container\">\n          { stacks\n            .map((stack) => (\n              <div className=\"main-project-stack\" key={ stack }>{ stack }</div>)) }\n        </div>\n      </div>\n      {/* <Link to={`/projects/${name}`}>Detalhes</Link> */}\n      <div className=\"main-project-buttons\">\n        <a className=\"project-button\" target=\"_blank\" rel=\"noreferrer\" href={ git }>\n          <img src={ gitHubIcon } alt=\"\" />\n          Visite o repositório\n        </a>\n        { (appOnAir)\n          && (\n            <a\n              className=\"project-button\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              href={ run }\n            >\n              App\n            </a>) }\n      </div>\n    </div>\n  );\n}\n\nMainProjectCard.propTypes = {\n  project: PropTypes.shape({\n    time: PropTypes.string.isRequired,\n    team: PropTypes.bool.isRequired,\n    appOnAir: PropTypes.bool.isRequired,\n    name: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    stacks: PropTypes.arrayOf(PropTypes.string).isRequired,\n    git: PropTypes.string.isRequired,\n    run: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default MainProjectCard;\n","const mainProjects = [\n  {\n    name: 'App Recipes',\n    description: `App de receitas, utilizando o que há de mais moderno dentro do ecossistema React: Hooks e Context API ou Redux.\n    Nele será possível ver, buscar, filtrar, favoritar e acompanhar o processo de preparação de receitas e drinks.    \n    A base de dados foram 2 APIs distintas, uma para comidas e outra para bebidas.    \n    O layout tem como foco dispositivos móveis, então todos os protótipos vão estar desenvolvidos em telas menores.`,\n    stacks: ['React Bootstrap', 'React Hooks', 'Redux', 'RTL', 'Kanban', 'Requisições a APIs'],\n    team: true,\n    time: '10 dias',\n    git: 'https://github.com/danielmlduarte/app-recipes',\n    run: 'https://danielmlduarte.github.io/app-recipes/',\n    appOnAir: true,\n  },\n  {\n    name: 'Trivia React Redux',\n    description: 'Um jogo de perguntas e respostas baseado no jogo Trivia (tipo um show do milhão americano) utilizando React e Redux, desenvolvendo em equipe suas funcionalidades de acordo com as demandas definidas em um quadro Kanban.',\n    stacks: ['React', 'Redux', 'Kanban', 'Requisições a API'],\n    team: true,\n    time: '5 dias',\n    git: 'https://github.com/danielmlduarte/trivia-react-redux',\n    run: 'https://danielmlduarte.github.io/trivia-react-redux',\n    appOnAir: false,\n  },\n  {\n    name: 'React Testing Library',\n    description: 'Nesse projeto foram escritos testes para uma aplicação React. Com base em uma aplicação pronta, elaborei teste que verificavam se as funcionalidades se comportavam como o esperado',\n    stacks: ['Jest', 'RTL'],\n    team: false,\n    time: '2 dias',\n    git: 'https://github.com/danielmlduarte/react-testing-library-practice',\n    run: 'https://danielmlduarte.github.io/react-testing-library-practice',\n    appOnAir: false,\n  },\n  {\n    name: 'Starwars Datatable Hooks',\n    description: 'Uma lista com filtros de planetas do universo de StarWars usando Context API e Hooks para controlar os estados globais.',\n    stacks: ['React', 'React Hooks', 'ContexAPI', 'Requisições a API'],\n    team: false,\n    time: '2 dias',\n    git: 'https://github.com/danielmlduarte/starwars-datatable-hooks',\n    run: 'https://danielmlduarte.github.io/starwars-datatable-hooks',\n    appOnAir: false,\n  },\n  {\n    name: 'Trybe Wallet',\n    description: 'Carteira de controle de gastos com conversor de moedas, ao utilizar essa aplicação um usuário deverá ser capaz de: Adicionar, remover e editar um gasto, Visualizar uma tabelas com seus gastos, Visualizar o total de gastos convertidos para uma moeda de escolhe',\n    stacks: ['React', 'Redux', 'Requisições a API'],\n    team: false,\n    time: '2 dias',\n    git: 'https://github.com/danielmlduarte/trybe-wallet',\n    run: 'https://danielmlduarte.github.io/trybe-wallet',\n    appOnAir: false,\n  },\n  {\n    name: 'Frontend Online Store',\n    description: 'Criar uma versão simplificada, sem persistência no banco de dados, de uma loja online, desenvolvendo em suas funcionalidades de acordo com demandas definidas em um quadro Kanban, em um cenário mais próximo ao do mercado de trabalho',\n    stacks: ['React', 'Kanban', 'Requisições a API'],\n    team: true,\n    time: '3 dias',\n    git: 'https://github.com/danielmlduarte/frontend-online-store',\n    run: 'https://danielmlduarte.github.io/frontend-online-store',\n    appOnAir: false,\n  },\n];\n\nexport default mainProjects;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport ProjectCard from '../components/ProjectCard';\nimport MainProjectCard from '../components/MainProjectCard';\nimport mainProjects from '../data/projectsList';\nimport '../styles/Projects.css';\n\nfunction Projects({ projectsList }) {\n  const [isRedirect, setIsRedirect] = useState(false);\n\n  useEffect(() => {\n    if (!projectsList) setIsRedirect(true);\n  }, [projectsList]);\n\n  return (\n    <div className=\"projects-container\">\n      { (isRedirect) && <Redirect to=\"/\" /> }\n      <div className=\"projects-text\">\n        <h3>Meus projetos.</h3>\n        <p>\n          Aqui você verá todos os projetos que desenvolvi durante o curso da\n          <span> TRYBE. </span>\n          Vão desde projetos bem simples, feitos somente com\n          <span> HTML </span>\n          e\n          <span> CSS, </span>\n          até projetos feitos com\n          <span> REACT </span>\n          usando\n          <span> REDUX, HOOKS e ContextAPI. </span>\n          Alguns projetos foram feitos aplicando\n          <span> MÉTODOS ÁGEIS </span>\n          , com a colaboração de outros colegas.\n        </p>\n      </div>\n      <div className=\"projects-section\">\n        { mainProjects\n          .map((project, index) => (\n            <MainProjectCard\n              key={ index }\n              project={ project }\n            />)) }\n      </div>\n      <div className=\"projects-section\">\n        { (projectsList.length) && projectsList\n          .map((project, index) => <ProjectCard key={ index } project={ project } />) }\n      </div>\n    </div>\n  );\n}\n\nProjects.propTypes = {\n  projectsList: PropTypes.arrayOf(\n    PropTypes.shape,\n  ).isRequired,\n};\n\nconst mapStateToProps = ((state) => ({\n  projectsList: state.projectsReducer.list,\n}));\n\nexport default connect(mapStateToProps)(Projects);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/Navbar.css';\n\nexport default function NavBar() {\n  return (\n    <div className=\"navbar-content\">\n      <Link className=\"navbar-header\" to=\"/\">\n        <p className=\"navbar-title\">Daniel Duarte - Desenvolvedor Front-End Jr.</p>\n      </Link>\n      <div className=\"navbar-links\">\n        <Link className=\"navbar-link\" to=\"/\">HOME</Link>\n        <Link className=\"navbar-link\" to=\"/about\">SOBRE MIM</Link>\n        <Link className=\"navbar-link\" to=\"/projects\">PROJETOS</Link>\n        <Link className=\"navbar-link-button\" to=\"/contact\">ENTRE EM CONTATO COMIGO</Link>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport '../styles/Footer.css';\n\nexport default function Footer() {\n  return (\n    <div className=\"footer-container\">\n      <p>© Daniel Duarte</p>\n      <p>\n        Página feita e constantemente atualizada por mim,\n        Daniel Duarte, com React, Redux e Bootstrap!\n      </p>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/GitHub-contact.5e5b93a2.png\";","export default __webpack_public_path__ + \"static/media/Linkedin-contact.c5f78655.png\";","export default __webpack_public_path__ + \"static/media/Outlook-contact.92bfdf00.png\";","export default __webpack_public_path__ + \"static/media/Whatsapp-contact.28823176.png\";","import React from 'react';\nimport '../styles/Contact.css';\nimport github from '../Images/GitHub-contact.png';\nimport linkedin from '../Images/Linkedin-contact.png';\nimport outlook from '../Images/Outlook-contact.png';\nimport whatsapp from '../Images/Whatsapp-contact.png';\n\nfunction Contact() {\n  return (\n    <div className=\"contact-container\">\n      <h3>Entre em contato comigo:</h3>\n      <div className=\"contact-div\">\n        <img className=\"image-contact\" src={ outlook } alt=\"logo outlook\" />\n        <a\n          href=\"mailto:daniel_mld@hotmail.com\"\n          className=\"contact-link\"\n        >\n          daniel_mld@hotmail.com\n        </a>\n      </div>\n      <div className=\"contact-div\">\n        <img className=\"image-contact\" src={ linkedin } alt=\"logo linkedin\" />\n        <a\n          href=\"http://linkedin.com/in/danielmlduarte\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"contact-link\"\n        >\n          linkedin.com/in/danielmlduarte\n        </a>\n      </div>\n      <div className=\"contact-div\">\n        <img className=\"image-contact\" src={ github } alt=\"logo github\" />\n        <a\n          href=\"http://github.com/danielmlduarte\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"contact-link\"\n        >\n          github.com/danielmlduarte\n        </a>\n      </div>\n      <div className=\"contact-div\">\n        <img className=\"image-contact\" src={ whatsapp } alt=\"logo whatsapp\" />\n        <a\n          href=\"https://wa.me/5531997706994\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"contact-link\"\n        >\n          (31) 9977-06994\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default Contact;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ProjectDetails({ match: { params: { name } } }) {\n  return (\n    <div>\n      {`Página de detalhes do projeto ${name}`}\n    </div>\n  );\n}\n\nProjectDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default ProjectDetails;\n","import React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport Projects from './pages/Projects';\nimport NavBar from './components/Navbar';\nimport Footer from './components/Footer';\nimport Contact from './pages/Contact';\nimport ProjectDetails from './pages/ProjectDetails';\nimport { fetchGitHubProjectsList } from './services/GitApi';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App({ fetchProjects }) {\n  useEffect(() => {\n    const ownerInfos = {\n      owner: 'danielmlduarte',\n      repoName: 'trybe-projects',\n      optionalPath: '',\n    };\n    fetchProjects(ownerInfos);\n  });\n\n  return (\n    <div>\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/\" component={ Home } />\n        <Route path=\"/about\" component={ About } />\n        <Route path=\"/projects/:name\" component={ ProjectDetails } />\n        <Route path=\"/projects\" component={ Projects } />\n        <Route path=\"/contact\" component={ Contact } />\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchProjects: (ownerInfos) => dispatch(fetchGitHubProjectsList(ownerInfos)),\n});\n\nApp.propTypes = {\n  fetchProjects: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import {\n  LIST_PROJECTS,\n  REQUEST_FAILED,\n  REQUEST_PROJECTS,\n} from '../actions';\n\nconst INITIAL_STATE = {\n  isFetching: false,\n  list: '',\n  error: '',\n};\n\nfunction projectsReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case LIST_PROJECTS:\n    return { ...state, list: action.list, isFetching: false };\n  case REQUEST_FAILED:\n    return { ...state, error: action.error };\n  case REQUEST_PROJECTS:\n    return { ...state, isFetching: true };\n  default:\n    return state;\n  }\n}\n\nexport default projectsReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport projectsReducer from './reducers/projectsReducer';\n\nconst rootReducer = combineReducers({ projectsReducer });\n\nconst store = createStore(rootReducer, composeWithDevTools(\n  applyMiddleware(thunk),\n));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <BrowserRouter basename={ process.env.PUBLIC_URL }>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}